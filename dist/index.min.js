var t=class{defaultOptions={spacing:1,numCircles:1e3,minRadius:1,maxRadius:10,higherAccuracy:!1,colors:"auto",minAlpha:1};defaultExportOptions={scale:window.devicePixelRatio,quality:1,format:"image/png"};options;spareCircles=[];placedCircles=[];dims={width:0,height:0};constructor(t={}){this.options={...this.defaultOptions,...t};for(let t=0;t<this.options.numCircles;t++)this.spareCircles.push({radius:this.options.minRadius+Math.random()*Math.random()*(this.options.maxRadius-this.options.minRadius)});this.spareCircles.sort(((t,i)=>t.radius-i.radius))}isFilled(t,i,s){return i=Math.round(i),s=Math.round(s),t.data[4*(this.dims.width*s+i)+3]>this.options.minAlpha}isCircleInside(t,i,s,e){if(!this.isFilled(t,i,s-e))return!1;if(!this.isFilled(t,i,s+e))return!1;if(!this.isFilled(t,i+e,s))return!1;if(!this.isFilled(t,i-e,s))return!1;if(this.options.higherAccuracy){const e=Math.cos(Math.PI/4);if(!this.isFilled(t,i+e,s+e))return!1;if(!this.isFilled(t,i-e,s+e))return!1;if(!this.isFilled(t,i-e,s-e))return!1;if(!this.isFilled(t,i+e,s-e))return!1}return!0}touchesPlacedCircle(t,i,s){return this.placedCircles.some((e=>this.dist(t,i,e.x,e.y)<e.radius+s+this.options.spacing))}dist(t,i,s,e){const r=t-s,a=i-e;return Math.sqrt(r*r+a*a)}getCircleColor(t,i,s){if("auto"===this.options.colors){i=Math.round(i),s=Math.round(s);const e=4*(this.dims.width*s+i);if(t.data[e+3]/255<this.options.minAlpha)return!1;return`rgb(${t.data[e]},${t.data[e+1]},${t.data[e+2]})`}return this.options.colors[Math.floor(Math.random()*this.options.colors.length)]}render(t,i){let s=this.spareCircles.length;for(this.dims={width:i,height:t.data.length/i/4};s>0;){s--;const i=this.spareCircles[s];let e=1e3;for(;!i.x&&e-- >0;){const s=Math.random()*this.dims.width,e=Math.random()*this.dims.height;if(this.isCircleInside(t,s,e,i.radius)&&!this.touchesPlacedCircle(s,e,i.radius)){const r=this.getCircleColor(t,s,e);r&&(i.x=s,i.y=e,i.color=r,this.placedCircles.push(i))}}}return this.placedCircles}asSVGString(){return`<svg width="${this.dims.width}" height="${this.dims.height}" viewBox="0 0 ${this.dims.width} ${this.dims.height}" xmlns="http://www.w3.org/2000/svg">`+this.placedCircles.map((t=>{const{x:i,y:s,radius:e,color:r}=t;return`<circle cx="${i}" cy="${s}" r="${e}" fill="${r}" />`})).join("")+"</svg>"}asSVG(){const t=this.asSVGString();return(new DOMParser).parseFromString(t,"image/svg+xml").documentElement}asCanvas(t={}){const i=(t={...this.defaultExportOptions,...t}).scale,s=document.createElement("canvas");s.width=this.dims.width*i,s.height=this.dims.height*i;const e=s.getContext("2d");for(const t of this.placedCircles){const{x:s,y:r,radius:a,color:n}=t;e.fillStyle=String(n),e.beginPath(),e.arc(Number(s*i),Number(r*i),a*i,0,2*Math.PI),e.closePath(),e.fill()}return s}asImageData(t={}){t={...this.defaultExportOptions,...t};const i=this.asCanvas(t);return i.getContext("2d").getImageData(0,0,i.width,i.height)}async asBlob(t={}){t={...this.defaultExportOptions,...t};const i=this.asCanvas(t);return await new Promise(((s,e)=>{i.toBlob((t=>{t?s(t):e(new Error("Blob creation failed"))}),t.format,t.quality)}))}async asBlobURL(t={}){return URL.createObjectURL(await this.asBlob(t))}asDataURL(t={}){return t={...this.defaultExportOptions,...t},this.asCanvas().toDataURL(t.format,t.quality)}asArray(){return this.placedCircles}};async function i(t,i={}){const e=URL.createObjectURL(t);return await s(e,i)}async function s(t,i={}){t=t instanceof URL?t.href:t;const s=document.createElement("img");return await new Promise((i=>{s.onload=i,s.src=t})),e(s,i)}function e(t,i={}){const s=document.createElement("canvas");s.width=t.width,s.height=t.height;const e=s.getContext("2d");return e.drawImage(t,0,0),a(e,i)}function r(i,s,e={}){const r=new t(e);return r.render(i,s),r}function a(t,i={}){return r(t.getImageData(0,0,t.canvas.width,t.canvas.height),t.canvas.width,i)}function n(t,i={}){return a(t.getContext("2d"),i)}function o(t=200,i="black",s={}){return c(t,t,i,s)}function h(t=100,i="black",s={}){const e=document.createElement("canvas");e.width=2*t,e.height=2*t;const r=e.getContext("2d");return r.fillStyle=i,r.beginPath(),r.arc(t,t,t,0,2*Math.PI),r.closePath(),r.fill(),a(r,s)}function c(t=200,i=200,s="black",e={}){const r=document.createElement("canvas");r.width=t,r.height=i;const n=r.getContext("2d");return n.fillStyle=s,n.fillRect(0,0,t,i),a(n,e)}export{t as CirclePacker,i as fromBlob,n as fromCanvas,h as fromCircle,a as fromContext2D,e as fromImage,r as fromImageData,c as fromRect,o as fromSquare,s as fromURL};
